# Supervisord running really should be a prerequisite for this, not encoded into it
---
- hosts: all
  vars:
    home: /home/vagrant
    virtualenv_home: "{{ home }}/.virtualenvs"
    repos_dir: "{{ home }}/repos"

    graphite_virtualenv: "{{virtualenv_home}}/graphite"
    graphite_bin: "{{ graphite_virtualenv }}/bin"
    graphite_python: "{{ graphite_bin }}/python"
    graphite_gunicorn_django: "{{ graphite_virtualenv }}/bin/gunicorn_django"

    graphite_install_dir: "{{ home }}/graphite"
    graphite_packages:
      - graphite-web
      - carbon
      - ceres
    graphite_version: "master"
    graphite_carbon_conf_files:
      - carbon.conf
      - storage-schemas.conf

    graphite_web_bind: 0.0.0.0:8000

    system_packages:
      - libcairo2-dev
      - python-cairo
      - python-rrdtool
      - memcached

  # most, if not all, of this work should be extracted to a role
  pre_tasks:
    - name: system requirements
      apt: pkg={{ item }} state=latest
      sudo: yes
      with_items: system_packages

    - file: state=directory path={{ home }}/{{ item }}
      with_items: [ "{{ graphite_install_dir }}", "{{ repos_dir }}" ]

    - name: download graphite packages
      git: repo=https://github.com/graphite-project/{{ item }}
           version={{ graphite_version }}
           dest={{ repos_dir }}/{{ item }}
           depth=1
      with_items: graphite_packages

    - name: workaround for network blocking git://
      command: sed -i -e "s/git+git/git+https/" {{ repos_dir }}/{{ item }}/requirements.txt
      with_items: graphite_packages

    - name: install graphite deps
      pip: requirements={{ repos_dir }}/{{ item }}/requirements.txt
           virtualenv={{ graphite_virtualenv }}
      with_items: graphite_packages

    - name: set install dir
      lineinfile: dest={{ repos_dir }}/{{ item }}/setup.cfg
                   state=present
                   regexp=^prefix.*
                   line=prefix={{ graphite_install_dir }}
                   backup=yes
      when: item != "ceres"
      with_items: graphite_packages

    - name: setup graphite apps
      command: chdir={{repos_dir }}/{{ item }}
               {{ graphite_python }} setup.py build install
      with_items: graphite_packages

    - name: copy example confs to main conf
      command: chdir={{ graphite_install_dir }}/conf
               creates={{ graphite_install_dir }}/conf/{{ item }} 
               cp {{ item }}.example {{ item }}
      with_items: graphite_carbon_conf_files

    - name: change sqlite storage location
      lineinfile: >
        dest={{ graphite_install_dir }}/webapp/graphite/settings.py
        state=present
        regexp=\'NAME\':\\s+\'/opt
        line="'NAME': '{{ graphite_install_dir }}/storage/graphite_db',"
        backup=yes

    - name: setup sqlite
      command: chdir={{ graphite_install_dir }}/webapp/graphite
               {{ graphite_python }} manage.py syncdb --noinput
      environment:
        PYTHONPATH: "{{ graphite_install_dir }}/webapp"

  roles:
    - role: "supervise"
      name: "carbon-cache"
      command: "{{ graphite_python }} carbon-cache.py --nodaemon start"
      chdir: "{{ graphite_install_dir }}/bin"
      app_env:
        PATH: "{{ graphite_bin }}"

    - role: "supervise"
      name: graphite-web
      command: "{{ graphite_gunicorn_django }} --bind={{graphite_web_bind}}"
      app_home: "{{graphite_install_dir}}/webapp/graphite"
      app_env:
        PATH: "{{ graphite_bin }}"
